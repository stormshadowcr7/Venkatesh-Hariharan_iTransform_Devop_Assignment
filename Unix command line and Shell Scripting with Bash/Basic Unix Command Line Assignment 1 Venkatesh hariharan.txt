Objective:- Assignments will help trainees to understand the basics of unix command and how to explore and use it.

DO NOT copy paste commands from internet, you can take help of the Unix in-built command manual.

Be Honest to yourself!

Important command and option to learn unix commands:-
man Command
Example:-
man ls

--help Option
Example:-
ls --help

NOTE:- Always use "man" command before using any unix commands and read about it and its options and how to use it.

Assignments:-

1. List the contents of a directory and their attributes
ANS: ls

2. Long list the content with file, directory ownership, permissions,sizes, etcâ€¦
ANS: ls -l1

3. Display the size of the file in human readable format
ANS: ls -lh1

4. Show all files and folders including hidden one
ANS: ls -a

5. list directories recursively
ANS: ls -R1

6. Sort the files by size with largest at the top
ANS: ls -as1

7. Sort the files by last time modified displaying the newest first.
ANS: ls -at1

8. Diplay the location of a program/command, where it is installed.
ANS: realpath <filename>

9. Which command is used to switch directory from one to another
ANS: cd <directoryname>

10. List all the environment variables set for the current shell environment
ANS: printenv and env

11. Did you notice something in the output of "env" command?
ANS: Yes, env command prints the list of current environmental variables

12. Which command is used to print the text or any variables value in the Console/Terminal?
ANS: echo

13. Print the value of the env variable "PATH" on the console
ANS: echo $PATH

14. Is linux a case-sensitive operating system?
ANS: yes it is a case sensitive os.

15. Is, "Ls" same as "ls"?
ANS: NO, as linux is a case sensitive os ls ans Ls are considered as two different terms by the shell.

16. Display your currently logged in user
ANS: whoami

17. how do you change the currrently logged in user to another user?
ANS: sudo -l <otherusername>

18. Which command is used to leave a shell environment that you are currently logged in to?
ANS: exit

19. How do you reboot the system?
ANS: sudo reboot

20. How do you shutdown the system?
ANS: sudo shutdown

21. Display all the major running processes in the system
ANS: top

22. Understand the output of command used in above question of displaying processes, explain the meaning of each column and what data it displays?
ANS: The PID column displays the process-id of each running process, the USER column displays the username of the task owner,
     The PR column displays priority of the process, the NI displays the nice value of the process, the VIRT displays virtual memory usage of process.
     The RES column displays physical memory usage, the SHR displays shared memory usage, the S column displays current status of process.
     The %CPU displays cpu time in percentage, %MEM displays memory used in percentage, TIME+ displays the total cpu uptime.
     The COMMAND  columns dispays the commands name. 

23. Display the name of the system kernel
ANS: uname -s

24. Display the kernel release number
ANS: uname -r

25. Display the machine type of the current kernel
ANS: uname -m

26. Display the name of the operating system that the kernel is running on
ANS: uname -o

27. Display all info that uname command can show.
ANS: uname -a

28. Display the name of directory that you are currently pointing to
ANS: pwd

29. Change the current directory to another directory that you have in your system.
ANS: cd

30. Go up one directory
ANS: cd ..

31. Return to last directory
ANS: cd-

32. change the current directory to home(logged in user's) directory
ANS: cd or cd~

33. How to check all the command used from the prompt (Command History)
ANS: history

34. In which file the history of commands are stored in?
ANS: .bash_history in home directory

35. How many lines of history does the system keep and from where you can change it?
ANS: Upto 1000 lines of history can be stored, its default is 500 which can be changed in $HISTSIZE file

36. How can you modify bash's history behaviour
ANS: Various inbuilt variables like $HISTSIZE can be used to change the maximum number of lines of history to be displayed.
     $HISTTIMEFORMAT  can be used to change the time format of history displayed.
     
37. Display all the commands entered so far, now, try to run a particular command from the history list without typing that command.
ANS: history command is used to view the commands entered so far and upper arrow can be used to access the command from history list.

 NOTE:- TAB key is your friend when it comes to command completion and having long file and directory names autocompleted at the bash prompt for you. JUST BE LAZY AND USE TAB KEY FOR AUTO COMPLETION ;-)


38. What are the different types of shell and where are they used and how do we use them?
ANS: 1.C shell (csh)-/bin/csh.
     2.Bourne Shell (sh)-/bin/sh and /sbin/sh.
     3.Korn shell (ksh)-/bin/ksh
     4.Bourne Again shell ( bash)-/bin/bash

39. What is the difference between login shell and non-login shell?
ANS: Login shell output will be -bash or -su.
     Non logins shell output will be bash or su

40. How do we start login shell and non-login shell?
ANS: A Login shell is started after a successful login, using /bin/login, by reading the /etc/passwd file. A Non login shell is started by a program without a login.The program just passes the name of the shell executable.

41. What happens when you start a login shell (which files are read and used and Why)?
ANS:Login process calls ~/.bash_profile

42. What happens when you start a non-login shell (Which files are read and used and Why)?
ANS: Non-login process(shell) calls ~/.bashrc

43. What are Shell Configuration Files, why do we need it?
ANS:They initialize and configure a shell upon login and. perform cleanup operations upon logout and used for user applications, 
    server processes and operating system settings.

44. Explain the Order of file usage from the system/user's home directory when user logs in to the System.
ANS: /etc/profile -> /etc/profile.d/-> ~/.bash_profile-> ./bashrc-> etc/bashrc

45. What are Shell Variables, list major shell variables and what do they represent?
ANS:A shell variable is a special variable that is set by the shell and is required by the shell in order to function correctly. 
    Some of these variables are environment variables whereas others are local variables."variable_name=variable_value". 
    For example, the command "set FILE_NAME=file1" creates the shell variable named "FILE_NAME" with a value of "file1".
    Major shell variables are certain environmental variables like USER, NAME PATH,TERM etc.

46. How we see all our env variables?
ANS: printenv | more

47. How we see all env variables in alphabical order?
ANS: printenv | sort

48. What Format does the env var and its values are stored?
ANS: Environmental variables are variables whose values are assigned by the operating system and are stored in key/value pair.

49. How do you create your own varible?
ANS: variable_name=variable_value

50. How do you start a new bash shell?
ANS: First a file like filename.sh is created then we can add some text in file with first line #!/bin/sh save text then use shell to access the filename.sh
     which would initialize the bash interpretor.

51. Difference between Local/Shell variables to Global Variable
ANS: Local variable is declared inside a function whereas Global variable is declared outside the function. 
     Local variables are created when the function has started execution and is lost when the function terminates, on the other hand, 
     Global variable is created as execution starts and is lost when the program ends.

52. Making a variable accessible from other the shell in the system.
ANS: We can do that bby putting that variable in "~/.profile" directory

53. Show the real life use case of exporting a variable
ANS: We can export a variable from parent process to child process.
     Simply set the value for a variable before exporting "export name[=value]"
     export -p to check the exported variables.

54. Convert the above script file into a command, The file should run with "myappp" instead of "myapp.sh"
ANS: Give execution rights to the scripts file using chmod u+x <filename>
     Append the path of the executale script file to PATH variable in .bash_profile file
     Write a code in script file starting with shebang "#!/bin/bash" and save it.
     Now we need to source .bash_profile once then we can run myapp.sh as a command.

55. What is Globbing? Explain in depth with examples?
ANS: Globbing is an operation that recognizes the wildcard pattern and expands it into its path name.

56. List all entries with extension ".sh"
ANS: ls -a *.sh

57. List all entries with numbers in it.
ANS: ls *[0-9]*

58. List all entries that starts with a character and ends with a number
ANS: ls [{a-z}, {A-Z}] *[0-9]

59. List all entries that name length more than 5 characters
ANS: ls ??????*

60. What is Quoting? and Why do we need it?
ANS: Quoting is used to remove the special meaning of certain characters or words to the shell. 
     Quoting can be used to disable special treatment for special characters,
     to prevent reserved words from being recognized as such, and to prevent parameter expansion.


61. Write few(minimum 3) unique examples that shows, how a particular problem is solved using Quoting.
ANS: 1. echo "Hello world :)"- here the quotation will cause the shell to ignore the ":" sign.
     2. echo  hello to learning/ 
                lets start learning/ - continuous writing
                with coding.
     3. echo 'hello/'


62. How do you find a particular files/directories based on a particular search criteria?
HINT:- look for commands -> locate, find and whereis
ANS: find <search criteria>

63. Write major difference between locate, find and whereis?
ANS: locate command simply looks in its database and reports the file location,
     find command does not use a database, it traverses all the directories and their sub directories and looks for files matching given criteria and, 
     whereis command only gives the location of installed application.
 
64. How Globbing is different from locate, find and whereis?
ANS: Globbing is mainly used to match filenames or searching for content in a file.locate simply looks its database and reports the file 
     location whereas find does not use a database, it traverses all the directories and their sub directories and, 
     looks for files matching the given criterion and whereis commands only give the location of installed application.

65. Explain the Linux File System.
ANS: file system  makes a table which stores data about files(and folders) like File name. When it was created. When it was modified. Who owns it. Who are allowed to access it

66. Explain absolute and Relative Paths
ANS: Absolute path starts from the directory root (/) and goes up to the actual object (file or directory). ex:/root/home/Anjali/index.
     Relative path starts from the current directory and goes up to the actual object. 
     ex:../../file-user want to access a file that is available two directories above.

67. What are the different ways of creating a File in linux System? Write an example of each and the difference between them.
ANS: touch filename-  easiest way to create a new file in Linux is by using the touch command. ex: touch index.txt.
     >filename- redirection operator is a name for a character that changes the destination where the results are displayed. ex: >file1.txt.
     cat>filename-cat command is short for concatenate. It can be used to output the contents of several files, one file, 
     or even part of a file. ex: cat> file2.txt, echo'sample text'> filename-echo command will duplicate whatever you specify in the command, 
     and put the copy into a file. ex:echo 'Hello'file3.txt

68. In how many ways we can delete the files from linux system? write an example of each and teh difference between them.
ANS: rm filename- remove particular file, unlink filename- this also removes single file, rm *.html- this will delete all the files of html, 
     rm filename1 filename2 filename3-this will remove multiple files.

69. Archiving files using linux command, write a command to archive set of files from linux commands.
ANS: tar -cvf myfiles.tar file1 file2

70. Extract the archived files from the above step.
ANS: tar -xvf myfiles.tar